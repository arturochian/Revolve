\name{make_huisman_2001}
\alias{huisman_mat_2}
\alias{huisman_matrices}
\alias{make_huisman_2001}
\title{Huisman & Weissing 2001}
\usage{
make_huisman_2001(r = 1, m = 0.25, D = 0.25, S = 1,
  matrices = huisman_matrices())

huisman_mat_2(x)

huisman_matrices(K = huisman_mat_2, C = huisman_mat_2)
}
\arguments{
  \item{r}{Intrinsic growth rate}

  \item{m}{Mortality rate}

  \item{D}{Resource turnover rate}

  \item{S}{Supply rate}

  \item{matrices}{Matrices generated by
  \code{huisman_matrices}}

  \item{x}{(For \code{husiman_K_2} and \code{husiman_C_2});
  species trait values, on a scale of 0 to 1 (not
  checked).}

  \item{K}{function that generate the K matrix (see the
  paper) or the K matrix itself.  If this is a function,
  then they must take exactly one argument 'x': this
  argument is used nowhere except for these two functions,
  but will be accepted by \code{run} and
  \code{equilibrium}.}

  \item{C}{as for K, but for the C matrix.}
}
\description{
Model implementing "Huisman, J., and Weissing, F.J. (2001).
Biological conditions for oscillations and chaos generated
by multispecies competition. Ecology 82, 2682-2695."

K(x) -> generates a matrix where each column is a species,
and each row is a resource.  It's set up so that the
performance on one resource is inversely related to the
performance on the second resource.  As such, 'x' entirely
determines a species (at least for now).
}
\details{
Test case...

Warning: there are some dependent parameters here, and they
won't be updated until I sort out some sort of parameter
hook.  Or I'll just remove the ability to set parameters
from the parmeters object, which reduces the complexity a
bit.

So, what we need to have is a couple of "axes" for
parameters to vary over.  But the actual parameters
underlying things are a crazy matrix of values.
}
\author{
Georges Kunstler and Rich FitzJohn
}

